security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ROOT: [ROLE_USER, ROLE_MANAGER, ROLE_ADMIN]
        ROLE_ADMIN: [ROLE_USER, ROLE_MANAGER, ROLE_REDACTOR]
        ROLE_REDACTOR: [ROLE_USER, ROLE_MANAGER]
        ROLE_MANAGER: [ROLE_USER]
    providers:
        db_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            provider: db_provider

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login

            logout:
                path:   /logout
                target: /

            access_denied_handler: App\Security\AccessDeniedHandler

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_REDACTOR }
        - { path: ^/admin/user, roles: ROLE_ADMIN }
        - { path: ^/register, roles: ROLE_ADMIN }

    encoders:
        App\Entity\User:
            algorithm: bcrypt